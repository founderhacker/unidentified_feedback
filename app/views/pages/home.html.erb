<div class="">
  <div class="mx-auto max-w-2xl py-16 px-4 text-center sm:py-20 sm:px-6 lg:px-8">
    <h2 class="text-3xl font-bold tracking-tight text-indigo-700 sm:text-4xl">
      <span class="block">Give anonymous feedback to</span>
      <span class="block">brands you love (or hate).</span>
    </h2>
    <p class="mt-4 text-lg leading-6 text-gray-700">
      Unidentified Feedback is a free tool that allows anyone to share a brief suggestion, anonymously, by simply providing a Twitter username.
    </p>
  </div>
</div>

<%= form_for(Feedback.new) do |f| %>
  <div class="max-w-lg mx-auto mt-5">
    <div>
      <label for="recipient_handle" class="block text-sm font-medium text-gray-700">Recipient Twitter Handle</label>
      <div class="mt-1 flex rounded-md shadow-sm">
        <span class="inline-flex items-center rounded-l-md border border-r-0 border-gray-300 bg-gray-50 px-3 text-gray-500 sm:text-sm">@</span>
        <input type="text" required name="feedback[recipient_handle]" id="feedback_recipient_handle" class="block w-full min-w-0 flex-1 rounded-none rounded-r-md border-gray-300 px-3 py-2 focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" placeholder="ryanckulp">
      </div>
    </div>

    <div id="existing_feedback" class="mt-1 mb-4 hidden">
      <p class="text-sm text-gray-500">
        We've already received feedback for this handle.
        <a id="existing_feedback_url" href="" target="_blank" class="text-indigo-600 hover:text-indigo-500">View it here.</a>
      </p>
    </div>

    <div class="mt-1">
      <textarea rows="4" required maxlength="250" name="feedback[text]" id="text" placeholder="When you didn't refund me last week I..." class="p-4 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"></textarea>
    </div>

    <div class="mt-1">
      <p class="text-right"><span id="char_counter">0</span> / 250</p>
    </div>

    <div class="text-center">
      <button type="submit" class="mt-1 inline-flex items-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">
        <!-- Heroicon name: mini/envelope -->
        <svg class="-ml-1 mr-3 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
          <path d="M3 4a2 2 0 00-2 2v1.161l8.441 4.221a1.25 1.25 0 001.118 0L19 7.162V6a2 2 0 00-2-2H3z" />
          <path d="M19 8.839l-7.77 3.885a2.75 2.75 0 01-2.46 0L1 8.839V14a2 2 0 002 2h14a2 2 0 002-2V8.839z" />
        </svg>
        Send Feedback
      </button>
    </div>
    

    <% if session[:tweet_url] %>
      <p class="mt-4 text-center">Tweet sent! <a href="<%= session[:tweet_url] %>" target="_blank" class="text-indigo-700">View it.</a></p>
      <% session[:tweet_url] = nil %>
    <% end %>
    <% if session[:pay_link_url] %>
      <p class="mt-4 text-center">Want your tweet Pinned? <a href="<%= session[:pay_link_url] %>" target="_blank" class="text-indigo-700">Pay $5 to Pin.</a></p>
      <% session[:pay_link_url] = nil %>
    <% end %>
  </div>
<% end %>

<script type="text/javascript">
  var charCounter = document.getElementById('char_counter');

  document.getElementById('text').addEventListener('keyup', function(){
    let charLength = this.value.length;
    charCounter.innerText = charLength;

    if (charLength == 250) {
      charCounter.style.color = 'red';
    } else {
      charCounter.style.color = 'black'
    }
  });

  var recipientHandle = document.getElementById('feedback_recipient_handle');
  var existingFeedback = document.getElementById('existing_feedback');
  var existingFeedbackUrl = document.getElementById('existing_feedback_url');

  /*
  add event listener to feedback_recipient_handle on the change
  that queries the ruby backend to see if that handle exists in database
  */
  recipientHandle.addEventListener('change', function() {
    const handle = recipientHandle.value;
    fetch('/feedbacks/' + handle)
      .then(response => response.json())
      .then(data => {
        if (data.existing_feedback_tweet_url) {
          const existingFeedbackTweetUrl = data.existing_feedback_tweet_url;
          existingFeedbackUrl.href = existingFeedbackTweetUrl;
          existingFeedback.classList.remove('hidden');
        } else {
          existingFeedback.classList.add('hidden');
        }
      });
  });

</script>
